package com.skhynix.dmr;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.StringReader;
import java.util.HashMap;

public class LisProcess {
	
	public static void main(String[] args) {
		LisProcess lis = new LisProcess();
		
		String str = lis.getIdvd(); // lis.getIdvg();
		int yCnt = lis.getYCnt();
		
		HashMap<String, String> info = lis.extraInfo(str);
		System.out.println(info);
		switch (info.get("type")) {
		case "idvg":
			HashMap<String, HashMap<String, String>> idvg = lis.extraIdvg(str, yCnt);
			HashMap<String, String> first1 = idvg.get("first");
			HashMap<String, String> last1 = idvg.get("last");
			break;
		case "idvd":
			HashMap<String, HashMap<String, String>> idvd = lis.extraIdvd(str, yCnt);
			HashMap<String, String> first2 = idvd.get("first");
			HashMap<String, String> last2 = idvd.get("last");
			System.out.println(idvd);
			break;
		case "isub":
			break;
		}
	}
	
	public HashMap<String, String> extraInfo(String str) {
		StringReader reader = new StringReader(str);
		BufferedReader bufferedReader = new BufferedReader(reader);
		HashMap<String, String> result = new HashMap<String, String>();
		String rLine="";
		try {
			while ((rLine = bufferedReader.readLine()) != null) {
				if (rLine.startsWith("file=")) {
					if (rLine.indexOf("idvg") > -1) {
						result.put("type", "idvg");
					} else if (rLine.indexOf("idvd") > -1) {
						result.put("type", "idvd");
					} else if (rLine.indexOf("isub") > -1) {
						result.put("type", "isub");
					}
				} else if (rLine.trim().startsWith("temp=")) {
					result.put("temp", rLine.split("=")[1].trim());
				} else if (rLine.trim().startsWith("w=")) {
					result.put("width", rLine.split("=")[1].trim());
				} else if (rLine.trim().startsWith("l=")) {
					result.put("length", rLine.split("=")[1].trim());
					break;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			reader.close();
			try {
				bufferedReader.close();
			} catch (IOException e) {}
		}
		return result;
	}
	
	public HashMap<String, HashMap<String, String>> extraIdvg(String str, int count) {
		StringReader reader = new StringReader(str);
		BufferedReader bufferedReader = new BufferedReader(reader);
		
		HashMap<String, HashMap<String, String>> result = new HashMap<String, HashMap<String, String>>();
		HashMap<String, String> first = new HashMap<String, String>();
		HashMap<String, String> last = new HashMap<String, String>();
		String rLine="";
		int index = 1;
		try {
			while ((rLine = bufferedReader.readLine()) != null) {
				if (rLine.indexOf("Idvg_lin") > -1) {
					String tmp1 = bufferedReader.readLine().trim();
					String x = tmp1.substring(0, tmp1.indexOf(" ")).trim();
					String y = tmp1.substring(tmp1.lastIndexOf(" ")).trim();

					if (index == 1) {
						first.put("x", x);
					}
					first.put("y" + index, y);
				} else if (rLine.indexOf("Idvg_sat") > -1) {
					String tmp1 = bufferedReader.readLine().trim();
					String x = tmp1.substring(0, tmp1.indexOf(" ")).trim();
					String y = tmp1.substring(tmp1.lastIndexOf(" ")).trim();

					if (index == 1) {
						last.put("x", x);
					}
					last.put("y" + index, y);
					index++;
				} else if (index > count) {
					break;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			reader.close();
			try {
				bufferedReader.close();
			} catch (IOException e) {}
		}
		result.put("first", first);
		result.put("last", last);
		return result;
	}
	
	public HashMap<String, HashMap<String, String>> extraIdvd(String str, int count) {
		StringReader reader = new StringReader(str);
		BufferedReader bufferedReader = new BufferedReader(reader);
		
		HashMap<String, HashMap<String, String>> result = new HashMap<String, HashMap<String, String>>();
		HashMap<String, String> first = new HashMap<String, String>();
		HashMap<String, String> last = new HashMap<String, String>();
		String rLine="";
		int index = 1;
		boolean isFirst = true;
		try {
			while ((rLine = bufferedReader.readLine()) != null) {
				if (rLine.indexOf("_idvd.pa1") > -1) {
					isFirst = false;
					index = 1;
				}
				if (rLine.indexOf("volt          idvd") > -1) {
					String tmp1 = bufferedReader.readLine().trim();
					String x = tmp1.substring(0, tmp1.indexOf(" ")).trim();
					String y = tmp1.substring(tmp1.lastIndexOf(" ")).trim();

					if (index == 1) {
						if (isFirst) {
							first.put("x", x);
						} else {
							last.put("x", x);
						}
						
					}
					
					if (isFirst) {
						first.put("y" + index, y);
					} else {
						last.put("y" + index, y);
					}
					
					index++;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			reader.close();
			try {
				bufferedReader.close();
			} catch (IOException e) {}
		}
		result.put("first", first);
		result.put("last", last);
		return result;
	}
	
	public int getYCnt() {
		return 4;
	}
	
	public String getIdvg() {
		return "*****option summary\r\n" + 
				"*******\r\n" + 
				"runlvl = 5.  Bypass =2\r\n" + 
				" Opening plot unit = 15\r\n" + 
				"file=HD180IHL5_VO.1.0_nhvs18_h_idvg.pa0\r\n" + 
				"12\r\n" + 
				"********dc transfer cuvers tnom=25.000 temp=25.000*****\r\n" + 
				"x\r\n" + 
				"vgs          Idvg_lin\r\n" + 
				" -5.00000000e-01  1.0988183e-18\r\n" + 
				" -4.80000000e-01  1.1007838e-18\r\n" + 
				"\r\n" + 
				"y\r\n" + 
				"x\r\n" + 
				"vgs          Idvg_sat\r\n" + 
				"  5.00000000e-01 -1.5612511e-17\r\n" + 
				"\r\n" + 
				"y\r\n" + 
				" corner_flag=0.0000e+00\r\n" + 
				" temp=-4.000e+01\r\n" + 
				" w=2.0000e-05\r\n" + 
				" l=5.5000e-07\r\n" + 
				"\r\n" + 
				"*****option summary\r\n" + 
				"*******\r\n" + 
				"runlvl = 5.  Bypass =2\r\n" + 
				" Opening plot unit = 15\r\n" + 
				"file=HD180IHL5_VO.1.0_nhvs18_h_idvg.pa1\r\n" + 
				"12\r\n" + 
				"\r\n" + 
				"********dc transfer cuvers tnom=25.000 temp=25.000*****\r\n" + 
				"X\r\n" + 
				"vgs          Idvg_lin\r\n" + 
				" -5.00000000e-01 -1.6165660e-18\r\n" + 
				" -4.80000000e-01  1.6165660e-18\r\n" + 
				" \r\n" + 
				"vgs          Idvg_sat\r\n" + 
				"  5.00000000e-01 -1.5612511e-18\r\n" + 
				"\r\n" + 
				"*****option summary\r\n" + 
				"*******\r\n" + 
				"runlvl = 5.  Bypass =2\r\n" + 
				" Opening plot unit = 15\r\n" + 
				"file=HD180IHL5_VO.1.0_nhvs18_h_idvg.pa2\r\n" + 
				"\r\n" + 
				"********dc transfer cuvers tnom=25.000 temp=25.000*****\r\n" + 
				"X\r\n" + 
				"vgs          Idvg_lin\r\n" + 
				" -5.00000000e-01  2.1165660e-18\r\n" + 
				" -4.80000000e-01  2.1165660e-18\r\n" + 
				"\r\n" + 
				"vgs          Idvg_sat\r\n" + 
				"  5.00000000e-01 -1.5612511e-19\r\n" + 
				"\r\n" + 
				"*****option summary\r\n" + 
				"*******\r\n" + 
				"runlvl = 5.  Bypass =2\r\n" + 
				" Opening plot unit = 15\r\n" + 
				"file=HD180IHL5_VO.1.0_nhvs18_h_idvg.pa3\r\n" + 
				"\r\n" + 
				"********dc transfer cuvers tnom=25.000 temp=25.000*****\r\n" + 
				"X\r\n" + 
				"vgs          Idvg_lin\r\n" + 
				" -5.00000000e-01  2.6165660e-18\r\n" + 
				" -4.80000000e-01  2.6165660e-18\r\n" + 
				" \r\n" + 
				"vgs          Idvg_sat\r\n" + 
				"  5.00000000e-01 -1.5612511e-20";
	}
	
	public String getIdvd() {
		return "***option summary\r\n" + 
				"file=HD180IHL5_V0.1.0_nhvs_idvd.pa0\r\n" + 
				"\r\n" + 
				"**parameter vgs = 6.0000000e+00 **\r\n" + 
				"\r\n" + 
				"X\r\n" + 
				"\r\n" + 
				"volt          idvd         \r\n" + 
				"0.00000000e+00 -6.3482928e-35\r\n" + 
				"2.00000000e-02 1.6721235e-06\r\n" + 
				"\r\n" + 
				"\r\n" + 
				"**parameter vgs = 6.0000000e+00 **\r\n" + 
				"\r\n" + 
				"X\r\n" + 
				"\r\n" + 
				"volt          idvd\r\n" + 
				"0.00000000e+00 -6.3482928e-36\r\n" + 
				"2.00000000e-02 1.6721235e-06\r\n" + 
				"\r\n" + 
				"***option summary\r\n" + 
				"file=HD180IHL5_V0.1.0_nhvs_idvd.pa1\r\n" + 
				"\r\n" + 
				"**parameter vgs = 6.0000000e+00 **\r\n" + 
				"\r\n" + 
				"X\r\n" + 
				"\r\n" + 
				"volt          idvd\r\n" + 
				"0.00000000e+00 -6.3482928e-37\r\n" + 
				"2.00000000e-02 1.6721235e-06\r\n" + 
				"\r\n" + 
				"volt          idvd\r\n" + 
				"0.00000000e+00 -6.3482928e-38\r\n" + 
				"2.00000000e-02 1.6721235e-06";
	}

}
